[2025-05-22T02:07:15.690Z] 🚀 Context版デモスクリプト開始 (ログ出力版)
[2025-05-22T02:07:15.695Z] 📝 ログファイル: D:\Development\graphai-image-demo\logs\graphai-demo.log
[2025-05-22T02:07:15.708Z] 🕒 実行開始時刻: 2025/5/22 11:07:15
[2025-05-22T02:07:15.709Z] ============================================================
[2025-05-22T02:07:15.753Z] 📍 メイン関数実行中...
[2025-05-22T02:07:15.753Z] 🚀 GraphAI 画像処理デモ開始! (Context版)
[2025-05-22T02:07:15.753Z] ==================================================
[2025-05-22T02:07:15.754Z] 📁 画像ファイル存在確認:
[2025-05-22T02:07:15.754Z]    ./images/image1.png: ✅ 存在
[2025-05-22T02:07:15.754Z]    ./images/image2.png: ✅ 存在
[2025-05-22T02:07:15.756Z]    ./images/image3.png: ✅ 存在
[2025-05-22T02:07:15.756Z] 📍 Context版スクリプト読み込み完了
[2025-05-22T02:07:15.756Z] 📁 ディレクトリ作成: ./images
[2025-05-22T02:07:15.757Z] 📁 ディレクトリ作成: ./output
[2025-05-22T02:07:15.759Z] 📊 YAML設定確認:
[2025-05-22T02:07:15.760Z]    image1 value: ./images/image1.png
[2025-05-22T02:07:15.760Z]    image2 value: ./images/image2.png
[2025-05-22T02:07:15.760Z]    image3 value: ./images/image3.png
[2025-05-22T02:07:15.760Z] 🔧 Context版エージェント登録状況:
[2025-05-22T02:07:15.761Z] - カスタムエージェント: imageProcessingAgent (Context版)
[2025-05-22T02:07:15.761Z] - エージェント構造: object
[2025-05-22T02:07:15.761Z] 📊 Graph構造:
[2025-05-22T02:07:15.761Z] - ノード数: 13
[2025-05-22T02:07:15.762Z] - 並列パイプライン: 3つ
[2025-05-22T02:07:15.762Z] - 処理ステップ: Input → Mosaic → Rotate → Resize → Summary
[2025-05-22T02:07:15.762Z] 
[2025-05-22T02:07:15.762Z] ⏰ 処理開始: 11:07:15
[2025-05-22T02:07:15.763Z] 
[2025-05-22T02:07:15.763Z] 🔧 GraphAI Context版インスタンス作成中...
[2025-05-22T02:07:15.764Z] 🚀 GraphAI Context版実行開始...
[2025-05-22T02:07:15.765Z] ==================================================
[2025-05-22T02:07:15.766Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "image1"
}
[2025-05-22T02:07:15.766Z] LOG: 🔍 params= {
  "operation": "mosaic",
  "blockSize": 10,
  "outputPath": "./output/image1_mosaic.jpg"
}
[2025-05-22T02:07:15.766Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "mosaic1"
}
[2025-05-22T02:07:15.767Z] LOG: 🎬 処理開始: mosaic - 11:07:15
[2025-05-22T02:07:15.767Z] LOG: 🔍 sourceNodeName: image1
[2025-05-22T02:07:15.767Z] LOG: ⚠️  ノード名を受信: image1, 実際の値を取得中...
[2025-05-22T02:07:15.768Z] LOG: 🔄 ノード名をファイルパスに変換: image1 → ./images/image1.png
[2025-05-22T02:07:15.768Z] LOG: 🔍 処理対象: mosaic, 最終入力値: ./images/image1.png
[2025-05-22T02:07:15.768Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "mosaic1"
}
[2025-05-22T02:07:15.769Z] LOG: 🔍 params= {
  "operation": "rotate",
  "angle": 90,
  "outputPath": "./output/image1_rotated.jpg"
}
[2025-05-22T02:07:15.769Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "rotate1"
}
[2025-05-22T02:07:15.770Z] LOG: 🎬 処理開始: rotate - 11:07:15
[2025-05-22T02:07:15.770Z] LOG: 🔍 sourceNodeName: mosaic1
[2025-05-22T02:07:15.770Z] LOG: ⚠️  ノード名を受信: mosaic1, 実際の値を取得中...
[2025-05-22T02:07:15.770Z] LOG: 🔄 ノード名をファイルパスに変換: mosaic1 → ./output/image1_mosaic.jpg
[2025-05-22T02:07:15.771Z] LOG: 🔍 処理対象: rotate, 最終入力値: ./output/image1_mosaic.jpg
[2025-05-22T02:07:15.771Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "rotate1"
}
[2025-05-22T02:07:15.771Z] LOG: 🔍 params= {
  "operation": "resize",
  "width": 300,
  "height": 300,
  "outputPath": "./output/image1_final.jpg"
}
[2025-05-22T02:07:15.772Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "resize1"
}
[2025-05-22T02:07:15.773Z] LOG: 🎬 処理開始: resize - 11:07:15
[2025-05-22T02:07:15.773Z] LOG: 🔍 sourceNodeName: rotate1
[2025-05-22T02:07:15.773Z] LOG: ⚠️  ノード名を受信: rotate1, 実際の値を取得中...
[2025-05-22T02:07:15.773Z] LOG: 🔄 ノード名をファイルパスに変換: rotate1 → ./output/image1_rotated.jpg
[2025-05-22T02:07:15.773Z] LOG: 🔍 処理対象: resize, 最終入力値: ./output/image1_rotated.jpg
[2025-05-22T02:07:15.774Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "image2"
}
[2025-05-22T02:07:15.774Z] LOG: 🔍 params= {
  "operation": "mosaic",
  "blockSize": 15,
  "outputPath": "./output/image2_mosaic.jpg"
}
[2025-05-22T02:07:15.774Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "mosaic2"
}
[2025-05-22T02:07:15.775Z] LOG: 🎬 処理開始: mosaic - 11:07:15
[2025-05-22T02:07:15.776Z] LOG: 🔍 sourceNodeName: image2
[2025-05-22T02:07:15.776Z] LOG: ⚠️  ノード名を受信: image2, 実際の値を取得中...
[2025-05-22T02:07:15.776Z] LOG: 🔄 ノード名をファイルパスに変換: image2 → ./images/image2.png
[2025-05-22T02:07:15.776Z] LOG: 🔍 処理対象: mosaic, 最終入力値: ./images/image2.png
[2025-05-22T02:07:15.777Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "mosaic2"
}
[2025-05-22T02:07:15.777Z] LOG: 🔍 params= {
  "operation": "rotate",
  "angle": 180,
  "outputPath": "./output/image2_rotated.jpg"
}
[2025-05-22T02:07:15.778Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "rotate2"
}
[2025-05-22T02:07:15.779Z] LOG: 🎬 処理開始: rotate - 11:07:15
[2025-05-22T02:07:15.779Z] LOG: 🔍 sourceNodeName: mosaic2
[2025-05-22T02:07:15.779Z] LOG: ⚠️  ノード名を受信: mosaic2, 実際の値を取得中...
[2025-05-22T02:07:15.779Z] LOG: 🔄 ノード名をファイルパスに変換: mosaic2 → ./output/image2_mosaic.jpg
[2025-05-22T02:07:15.780Z] LOG: 🔍 処理対象: rotate, 最終入力値: ./output/image2_mosaic.jpg
[2025-05-22T02:07:15.780Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "rotate2"
}
[2025-05-22T02:07:15.780Z] LOG: 🔍 params= {
  "operation": "resize",
  "width": 300,
  "height": 300,
  "outputPath": "./output/image2_final.jpg"
}
[2025-05-22T02:07:15.781Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "resize2"
}
[2025-05-22T02:07:15.782Z] LOG: 🎬 処理開始: resize - 11:07:15
[2025-05-22T02:07:15.782Z] LOG: 🔍 sourceNodeName: rotate2
[2025-05-22T02:07:15.782Z] LOG: ⚠️  ノード名を受信: rotate2, 実際の値を取得中...
[2025-05-22T02:07:15.782Z] LOG: 🔄 ノード名をファイルパスに変換: rotate2 → ./output/image2_rotated.jpg
[2025-05-22T02:07:15.783Z] LOG: 🔍 処理対象: resize, 最終入力値: ./output/image2_rotated.jpg
[2025-05-22T02:07:15.783Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "image3"
}
[2025-05-22T02:07:15.783Z] LOG: 🔍 params= {
  "operation": "mosaic",
  "blockSize": 8,
  "outputPath": "./output/image3_mosaic.jpg"
}
[2025-05-22T02:07:15.783Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "mosaic3"
}
[2025-05-22T02:07:15.784Z] LOG: 🎬 処理開始: mosaic - 11:07:15
[2025-05-22T02:07:15.784Z] LOG: 🔍 sourceNodeName: image3
[2025-05-22T02:07:15.785Z] LOG: ⚠️  ノード名を受信: image3, 実際の値を取得中...
[2025-05-22T02:07:15.785Z] LOG: 🔄 ノード名をファイルパスに変換: image3 → ./images/image3.png
[2025-05-22T02:07:15.785Z] LOG: 🔍 処理対象: mosaic, 最終入力値: ./images/image3.png
[2025-05-22T02:07:15.786Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "mosaic3"
}
[2025-05-22T02:07:15.786Z] LOG: 🔍 params= {
  "operation": "rotate",
  "angle": 270,
  "outputPath": "./output/image3_rotated.jpg"
}
[2025-05-22T02:07:15.786Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "rotate3"
}
[2025-05-22T02:07:15.787Z] LOG: 🎬 処理開始: rotate - 11:07:15
[2025-05-22T02:07:15.787Z] LOG: 🔍 sourceNodeName: mosaic3
[2025-05-22T02:07:15.787Z] LOG: ⚠️  ノード名を受信: mosaic3, 実際の値を取得中...
[2025-05-22T02:07:15.787Z] LOG: 🔄 ノード名をファイルパスに変換: mosaic3 → ./output/image3_mosaic.jpg
[2025-05-22T02:07:15.788Z] LOG: 🔍 処理対象: rotate, 最終入力値: ./output/image3_mosaic.jpg
[2025-05-22T02:07:15.790Z] ERROR: ❌ 処理エラー: resize {
  "message": "Input file is missing: ./output/image1_rotated.jpg"
}
[2025-05-22T02:07:15.791Z] ERROR: <-- NodeId: resize1, Agent: imageProcessingAgent
[2025-05-22T02:07:15.791Z] ERROR: {
  "namedInputs": {
    "source": "rotate1"
  }
}
[2025-05-22T02:07:15.792Z] ERROR: {
  "message": "Input file is missing: ./output/image1_rotated.jpg"
}
[2025-05-22T02:07:15.792Z] ERROR: -->
[2025-05-22T02:07:15.793Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "source": "rotate3"
}
[2025-05-22T02:07:15.793Z] LOG: 🔍 params= {
  "operation": "resize",
  "width": 300,
  "height": 300,
  "outputPath": "./output/image3_final.jpg"
}
[2025-05-22T02:07:15.794Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "resize3"
}
[2025-05-22T02:07:15.795Z] LOG: 🎬 処理開始: resize - 11:07:15
[2025-05-22T02:07:15.795Z] LOG: 🔍 sourceNodeName: rotate3
[2025-05-22T02:07:15.795Z] LOG: ⚠️  ノード名を受信: rotate3, 実際の値を取得中...
[2025-05-22T02:07:15.796Z] LOG: 🔄 ノード名をファイルパスに変換: rotate3 → ./output/image3_rotated.jpg
[2025-05-22T02:07:15.796Z] LOG: 🔍 処理対象: resize, 最終入力値: ./output/image3_rotated.jpg
[2025-05-22T02:07:15.796Z] ERROR: ❌ 処理エラー: resize {
  "message": "Input file is missing: ./output/image2_rotated.jpg"
}
[2025-05-22T02:07:15.797Z] ERROR: <-- NodeId: resize2, Agent: imageProcessingAgent
[2025-05-22T02:07:15.797Z] ERROR: {
  "namedInputs": {
    "source": "rotate2"
  }
}
[2025-05-22T02:07:15.797Z] ERROR: {
  "message": "Input file is missing: ./output/image2_rotated.jpg"
}
[2025-05-22T02:07:15.798Z] ERROR: -->
[2025-05-22T02:07:15.798Z] LOG: 🔍 Context呼び出し: namedInputs= {
  "result1": "resize1",
  "result2": "resize2",
  "result3": "resize3"
}
[2025-05-22T02:07:15.798Z] LOG: 🔍 params= {
  "operation": "summary",
  "outputPath": "./output/processing_summary.json"
}
[2025-05-22T02:07:15.799Z] LOG: 🔍 全コンテキスト= {
  "keys": [
    "params",
    "namedInputs",
    "inputSchema",
    "debugInfo",
    "cacheType",
    "filterParams",
    "config",
    "log"
  ],
  "nodeId": "summary"
}
[2025-05-22T02:07:15.799Z] LOG: 🎬 処理開始: summary - 11:07:15
[2025-05-22T02:07:15.800Z] LOG: 🔍 処理対象: summary, 最終入力値: resize1,resize2,resize3
[2025-05-22T02:07:15.800Z] ERROR: ❌ 処理エラー: mosaic {
  "message": "./output/image1_mosaic.jpg: unable to open for write\nwindows error: �f�o�C�X���R�}���h��F���ł��܂���B"
}
[2025-05-22T02:07:15.800Z] ERROR: <-- NodeId: mosaic1, Agent: imageProcessingAgent
[2025-05-22T02:07:15.801Z] ERROR: {
  "namedInputs": {
    "source": "image1"
  }
}
[2025-05-22T02:07:15.801Z] ERROR: {
  "message": "./output/image1_mosaic.jpg: unable to open for write\nwindows error: �f�o�C�X���R�}���h��F���ł��܂���B"
}
[2025-05-22T02:07:15.802Z] ERROR: -->
[2025-05-22T02:07:15.802Z] LOG: ✅ 処理完了: rotate (25ms) - 11:07:15
[2025-05-22T02:07:15.802Z] LOG: 📤 出力: ./output/image2_rotated.jpg
[2025-05-22T02:07:15.803Z] LOG: ✅ 処理完了: rotate (18ms) - 11:07:15
[2025-05-22T02:07:15.803Z] LOG: 📤 出力: ./output/image3_rotated.jpg
[2025-05-22T02:07:15.803Z] LOG: ✅ 処理完了: rotate (35ms) - 11:07:15
[2025-05-22T02:07:15.804Z] LOG: 📤 出力: ./output/image1_rotated.jpg
[2025-05-22T02:07:15.804Z] LOG: ✅ 処理完了: mosaic (30ms) - 11:07:15
[2025-05-22T02:07:15.804Z] LOG: 📤 出力: ./output/image2_mosaic.jpg
[2025-05-22T02:07:15.804Z] LOG: ✅ 処理完了: mosaic (21ms) - 11:07:15
[2025-05-22T02:07:15.804Z] LOG: 📤 出力: ./output/image3_mosaic.jpg
[2025-05-22T02:07:15.806Z] LOG: ✅ 処理完了: summary (8ms) - 11:07:15
[2025-05-22T02:07:15.806Z] LOG: 📤 出力: [object Object]
[2025-05-22T02:07:15.808Z] LOG: ✅ 処理完了: resize (15ms) - 11:07:15
[2025-05-22T02:07:15.809Z] LOG: 📤 出力: ./output/image3_final.jpg
[2025-05-22T02:07:15.809Z] ❌ Context版エラー: ./output/image1_mosaic.jpg: unable to open for write
windows error: �f�o�C�X���R�}���h��F���ł��܂���B
[2025-05-22T02:07:15.809Z] スタックトレース: Error: ./output/image1_mosaic.jpg: unable to open for write
windows error: �f�o�C�X���R�}���h��F���ł��܂���B
    at Sharp.toFile (D:\Development\graphai-image-demo\node_modules\sharp\lib\output.js:90:19)
    at applyMosaic (D:\Development\graphai-image-demo\imageAgent-context.js:133:6)
    at async imageProcessingAgent (D:\Development\graphai-image-demo\imageAgent-context.js:80:18)
    at async F.execute (D:\Development\graphai-image-demo\node_modules\graphai\lib\bundle.cjs.js:1:11655)
